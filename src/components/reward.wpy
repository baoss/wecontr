<style type="less">
</style>
<template>
<view>
  
<view class="cu-modal {{show?'show':''}}" @tap='hideModal'>
  <view class="cu-dialog padding" catchtap>
    <view class="flex">
        <view class='flex-sub bg-red padding-sm margin-xs radius' @tap="doReward()">
          激励 +{{rewardAction}}
        </view>
    </view>
  </view>
</view>

</view>
</template>
<script>
  import wepy from 'wepy'
  import commApi from '../api/comm'

  export default class Sign extends wepy.component {
    props = {
    
      ArticleID:{ //激励文章ID
        type:Number,
        default:10,
      },
      rewardAction:{ //激励行为等分
        type:Number,
        default:10,
      },
      canReward:{ //可以激励
        type:Boolean,
        default:false,
      },
      show:{ //显示插件
        type:Boolean,
        default:false,
      },
      rewardStatus:{ // 可以激励
        type:Boolean,
        default:true,
      },
      unitid:{ // 激励广告id
        type:String,
        default:'adunit-af7d0a78f1f9b557',
      }
    }
    data = {
      videoAd: null,
      videoAdLoaded: false, // 激励视频加载完成
      completeReward:0, // 完成激励 组件标志
    }

    watch = {
    }

    methods = {
      // 观看激励式视频
      async doReward(){
        var that = this
        let videoAd = this.videoAd 
        // console.log('videoAd',videoAd)
        // 用户触发广告后，显示激励视频广告
        if (videoAd) {
          videoAd.offClose() //取消旧的绑定
          videoAd.onClose((res) => {
            if (res && res.isEnded) {
              // 正常播放结束，可以下发游戏奖励
              that.completeReward = true
              that.$emit('rewardFn', res)
              that.$apply()
            } else {
              // 播放中途退出，不下发游戏奖励
              wepy.showToast({ title: '未获得奖励！', icon:"none", duration: 500 });
            }
          })

          videoAd.show().catch(() => {
            // 失败重试
            videoAd.load()
              .then(() => videoAd.show())
              .catch(err => {
                that.rewardStatus = 0
                wepy.showToast({ title: '广告显示失败', icon:"none", duration: 500 });
              })
          })
        }
      },
      hideModal(){ // 取消激励
        this.$emit('hideFn')
      },
    }
    async onLoad () {
      var that = this
      if (wx.createRewardedVideoAd && that.unitid) {
          let videoAd = wx.createRewardedVideoAd({
            adUnitId: that.unitid
          })
          videoAd.onLoad(() => {
            that.videoAdLoaded = true
            that.$apply()
          })
          videoAd.onError((err) => {
            that.videoAdLoaded = false
            that.$apply()
          })
          videoAd.onClose((res) => {})
          console.log('videoAd',videoAd)
          this.videoAd = videoAd
      }else{
        // 通知隐藏激励按钮
        this.$emit('hideReward')
      }
    }

    watch = {
      unitid(val){
        var that = this
        if (wx.createRewardedVideoAd && val) {
            let videoAd = wx.createRewardedVideoAd({
              adUnitId: val
            })
            videoAd.onLoad(() => {
              that.videoAdLoaded = true
              that.$apply()
            })
            videoAd.onError((err) => {
              that.videoAdLoaded = false
              that.$apply()
            })
            videoAd.onClose((res) => {})
            // console.log('videoAd',videoAd)
            this.videoAd = videoAd
        }else{
          // 通知隐藏激励按钮
          this.$emit('hideReward')
        }
      }
    }

    computed = {
    };
  }
</script>
